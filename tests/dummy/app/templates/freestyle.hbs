{{#freestyle-guide title="Ember Freestyle" subtitle="Living Style Guide"}}
  {{!-- DROPDOWN --}}
  {{#freestyle-section name="dropdown"}}
    <ViewModeControl
      @name="dropdown"
      @viewMode={{this.viewMode}}
      @showLabelInViewMode={{this.showLabelInViewMode}}
    />
    {{#freestyle-collection title="dropdown" defaultKey="default" inline=true as |collection|}}
      {{#collection.variant key="default"}}
        {{#freestyle-note "dropdown--notes"}}
          ```
          countries = [
            { name: 'United States' },
            { name: 'Spain' },
            { name: 'Portugal' },
            { name: 'Russia' },
            { name: 'Latvia' },
            { name: 'Brazil' },
            { name: 'United Kingdom' }
          ];
          ```
        {{/freestyle-note}}
        {{#freestyle-usage "dropdown" title="Default Dropdown"}}
          <Dropdown
            @options={{this.countries}}
            @label="Select a country"
            @mode={{this.mode}}
            @showLabelInViewMode={{this.showLabelInViewMode}}
          />
        {{/freestyle-usage}}
        {{#freestyle-note "dropdown-change-action--notes"}}
          ```
          export default class Dropdown extends Component {
            // ...
            @action
            customDropdownAction(value) {
              // custom action
            }
          }
          ```
        {{/freestyle-note}}
        {{#freestyle-usage "dropdown-change-action" title="Dropdown With Custom Change Action"}}
          <Dropdown
            @changeAction={{action this.customDropdownAction}}
            @options={{this.countries}}
            @label="Select a country"
          />
        {{/freestyle-usage}}
        {{#freestyle-note "dropdown-with-default-selected--notes"}}
          ```
          export default class Dropdown extends Component {
            // ...
            selected = { name: "Spain" };
          }
          ```
        {{/freestyle-note}}
        {{#freestyle-usage "dropdown-with-default-selected" title="Dropdown with Default Selection"}}
          <Dropdown
            @selected={{this.selected}}
            @options={{this.countries}}
            @label="Select a country"
            @mode={{this.mode}}
            @showLabelInViewMode={{this.showLabelInViewMode}}
          />
        {{/freestyle-usage}}
        {{#freestyle-usage "dropdown-disabled" title="Disabled Dropdown"}}
          <Dropdown
            @disabled={{true}}
            @options={{this.countries}}
            @mode={{this.mode}}
            @showLabelInViewMode={{this.showLabelInViewMode}}
          />
        {{/freestyle-usage}}
        {{#freestyle-usage "dropdown-required" title="Required Dropdown"}}
          <Dropdown
            @required={{true}}
            @label="Select a country"
            @outerLabel="Country"
            @options={{this.countries}}
            @mode={{this.mode}}
            @showLabelInViewMode={{this.showLabelInViewMode}}
          />
        {{/freestyle-usage}}
      {{/collection.variant}}
      {{#collection.variant key="search-field"}}
        {{#freestyle-usage "dropdown-with-search" title="Search Disabled"}}
          <Dropdown
            @searchEnabled={{false}}
            @options={{this.countries}}
            @label="Select a country"
            @mode={{this.mode}}
            @showLabelInViewMode={{this.showLabelInViewMode}}
          />
        {{/freestyle-usage}}
        {{#freestyle-note "dropdown-custom-search-field--notes"}}
          ```
          countries = [
            { formalName: 'United States of America' },
            { formalName: 'Kingdom of Spain' },
            { formalName: 'Portuguese Republic' },
            { formalName: 'Russian Federation' },
            { formalName: 'Republic of Latvia' },
            { formalName: 'Federative Republic of Brazil' },
            { formalName: 'United Kingdom of Great Britain and Northern Ireland' }
          ];
          ```
        {{/freestyle-note}}
        {{#freestyle-usage "dropdown-custom-search-field" title="Custom search field"}}
          <Dropdown
            @searchField="formalName"
            @options={{this.countries}}
            @label="Select a country"
            @mode={{this.mode}}
            @showLabelInViewMode={{this.showLabelInViewMode}}
          />
        {{/freestyle-usage}}
        {{#freestyle-note "dropdown-with-custom-search-action--notes"}}
          ```
          countries = [
            { name: 'United States' },
            { name: 'Spain' },
            { name: 'Portugal' },
            { name: 'Russia' },
            { name: 'Latvia' },
            { name: 'Brazil' },
            { name: 'United Kingdom' }
          ];

          searchByLengthOfCountryName = async num => {
            return Promise.resolve(countries.filter(item => {
              return item.name.length === parseInt(num);
            }));
          };
          ```
          `@searchAction` must be an `async` function that returns an array of items.
        {{/freestyle-note}}
        {{#freestyle-usage "dropdown-with-custom-search-action" title="Custom search action"}}
          <Dropdown
            @searchAction={{action this.searchByLengthOfCountryName}}
            @label="Enter number of letters"
            @mode={{this.mode}}
            @showLabelInViewMode={{this.showLabelInViewMode}}
          />
        {{/freestyle-usage}}
      {{/collection.variant}}
      {{#collection.variant key="multi-select"}}
        {{#freestyle-usage "dropdown-multiple" title="Multi-Select Dropdown"}}
          <Dropdown
            @multiple={{true}}
            @options={{this.countries}}
            @label="Select a country"
            @mode={{this.mode}}
            @showLabelInViewMode={{this.showLabelInViewMode}}
          />
        {{/freestyle-usage}}
      {{/collection.variant}}
      {{#collection.variant key="custom-options"}}
        {{#freestyle-note "dropdown-with-customized-options--notes"}}
          ```
          const customDropdownOptions = [
            {
              imageUrl: 'https://via.placeholder.com/50x35',
              cardType: 'Ether',
              transactionId: '0xCb3d...C16fc',
              network: 'Mainnet',
              fromValue: '15.3532 ETH',
              toValue: '$3993.7 USD'
            },
            {
              imageUrl: 'https://via.placeholder.com/50x35',
              cardType: 'Bitcoin',
              transactionId: '0xCb3a...C36fc',
              network: 'Rinkeby',
              fromValue: '2.3532 BTC',
              toValue: '$8509 USD'
            },
            {
              imageUrl: 'https://via.placeholder.com/50x35',
              cardType: 'Litecoin',
              transactionId: '0xCb3a...B96fa',
              network: 'Ropstein',
              fromValue: '82.92 LIT',
              toValue: '$2547 USD'
            }
          ];
          export default Component.extend({
            // ...
            customDropdownOptions,
            selectedCrypto: customDropdownOptions[1],
          });

          // custom-option.hbs
          <span><img src={{@option.imageUrl}} alt="card"></span>
          <span class="caps">{{@option.cardType}}</span>
          <span class="lightweight">{{@option.transactionId}}</span>
          <span class="lightweight caps">{{@option.network}}</span>
          <span class="lightweight">{{@option.fromValue}}</span>
          <span class="lightweight">{{@option.toValue}}</span>
          ```
        {{/freestyle-note}}
        {{#freestyle-usage "dropdown-with-customized-options" title="Dropdown With Custom option component"}}
          <Dropdown
            @optionComponent="custom-option"
            @options={{this.customDropdownOptions}}
            @label="Payment method"
            @mode={{this.mode}}
            @showLabelInViewMode={{this.showLabelInViewMode}}
          />
        {{/freestyle-usage}}
        {{#freestyle-usage "dropdown-with-block" title="Dropdown With Custom Options"}}
          <Dropdown
            @options={{this.customDropdownOptions}}
            @label="Payment method"
            @mode={{this.mode}}
            @showLabelInViewMode={{this.showLabelInViewMode}} as |option|
          >
            {{option.cardType}} - {{option.transactionId}}
          </Dropdown>
        {{/freestyle-usage}}
      {{/collection.variant}}
      {{#collection.variant key="dark-theme"}}
        {{#freestyle-usage "dropdown-dark" class="dark-mode" title="Dropdown Dark"}}
          <Dropdown
            @theme="dark"
            @options={{this.countries}}
            @mode={{this.mode}}
            @showLabelInViewMode={{this.showLabelInViewMode}}
          />
        {{/freestyle-usage}}
        {{#freestyle-usage "dropdown-dark-disabled" class="dark-mode" title="Disabled"}}
          <Dropdown
            @theme="dark"
            @disabled={{true}}
            @options={{this.countries}}
            @label="Select a country"
            @mode={{this.mode}}
            @showLabelInViewMode={{this.showLabelInViewMode}}
          />
        {{/freestyle-usage}}
        {{#freestyle-usage "dropdown-dark-outer-label" class="dark-mode" title="With Outer Label"}}
          <Dropdown
            @theme="dark"
            @label="Select a country"
            @outerLabel="Country"
            @options={{this.countries}}
            @mode={{this.mode}}
            @showLabelInViewMode={{this.showLabelInViewMode}}
          />
        {{/freestyle-usage}}
        {{#freestyle-usage "dropdown-dark-required" class="dark-mode" title="Required"}}
          <Dropdown
            @theme="dark"
            @required={{true}}
            @label="Select a country"
            @outerLabel="Country"
            @options={{this.countries}}
            @mode={{this.mode}}
            @showLabelInViewMode={{this.showLabelInViewMode}}
          />
        {{/freestyle-usage}}
      {{/collection.variant}}
    {{/freestyle-collection}}
  {{/freestyle-section}}


  {{!-- CTA --}}
  {{#freestyle-section name="cta"}}
    {{#freestyle-collection title="CTA" defaultKey="primary" inline=true as |collection|}}
      {{#collection.variant key="primary"}}
        {{#freestyle-usage "primary-cta" title="Primary CTA"}}
          <Cta>Primary Call to Action</Cta>
        {{/freestyle-usage}}
      {{/collection.variant}}
      {{#freestyle-note "primary-cta--notes"}}
        By default, `Cta` will render a primary type
      {{/freestyle-note}}
      {{#collection.variant key="secondary"}}
        {{#freestyle-usage "secondary-cta" title="Secondary CTA"}}
          <Cta @variant="secondary">Secondary Call to Action</Cta>
        {{/freestyle-usage}}
      {{/collection.variant}}
      {{#collection.variant key="without-block"}}
        {{#freestyle-usage "cta" title="Primary CTA without block"}}
          <Cta @label="Hello" />
        {{/freestyle-usage}}
      {{/collection.variant}}
      {{#collection.variant key="disabled"}}
        {{#freestyle-usage "disabled-cta" title="Disabled CTA" inline=true}}
          <Cta @disabled="true">Disabled</Cta>
        {{/freestyle-usage}}
      {{/collection.variant}}
      {{#collection.variant key="secondary-disabled"}}
        {{#freestyle-usage "secondary-disabled-cta" title="Secondary Disabled CTA" inline=true}}
          <Cta @variant="secondary" @disabled="true">Secondary Disabled</Cta>
        {{/freestyle-usage}}
      {{/collection.variant}}
      {{#collection.variant key="loading"}}
        {{#freestyle-usage "loading-cta" title="Loading CTA" inline=true}}
          <Cta @isLoading={{this.isLoading}} @handleClick={{action this.showLoadingState}}>Click to load</Cta>
        {{/freestyle-usage}}
      {{/collection.variant}}
      {{#collection.variant key="themed"}}
        {{#freestyle-usage "primary-cta-themed" title="Themed Primary CTA" inline=true}}
          <Cta @variant="primary" @theme="cs-theme">Button</Cta>
        {{/freestyle-usage}}
        {{#freestyle-usage "secondary-cta-themed" title="Themed Secondary CTA" inline=true}}
          <Cta @variant="secondary" @theme="cs-theme">Button</Cta>
        {{/freestyle-usage}}
        {{#freestyle-note "primary-cta-themed--notes"}}
          <p>
            Pass a pre-defined theme name to the <code>@theme</code> attribute on your component.
            Themes affect all variants of a button.
          </p>
          <p>Available variants: <code>primary</code> (solid background button); <code>secondary</code> (outline button with transparent background)</p>
          <p>Available themes: <code>cs-theme</code></p>
        {{/freestyle-note}}
        {{#freestyle-annotation}}
          <h2>How to Create a Theme for This Component (Animated Label)</h2>
          <ol>
            <li>Define a new CSS class on your stylesheet. This will be the theme name.</li>
            <li>Change the values set to available CSS variables (see list below).</li>
            <li>Pass the theme name to the <code>@theme</code> attribute on the component.</li>
          </ol>
          <h2>Customizable CSS variables</h2>
          <b>Note: <code>--cs-component</code> prefixed values below are inherited from the root level, but can still be customized with a theme.</b>
          <pre>
            <code>
              .your-theme-name {
              <b>Common</b>
              --cs-cta-width                // auto
              --cs-cta-height               // auto
              --cs-cta-padding-horizontal   // 20px
              --cs-cta-padding-vertical     // 12px
              --cs-cta-font-size            // 14px
              --cs-cta-font-weight          // 600
              --cs-cta-line-height          // 1
              --cs-cta-border-radius        // <b>--cs-component-border-radius</b>
              --cs-cta-box-shadow           // <b>--cs-component-box-shadow</b>

              <b>Primary-variant only</b>
              --cs-cta-color                      // white
              --cs-cta-background-color           // gray (#5d5d5d)
              --cs-cta-border-color               // --cs-cta-background-color

              <b>Primary-variant: Hover state</b>
              --cs-cta-hover-color                // white
              --cs-cta-hover-background-color     // dark-gray (#222)

              <b>Primary-variant: Disabled state</b>
              --cs-cta-disabled-color             // dark-gray with opacity 0.4
              --cs-cta-disabled-background-color  // dark-gray with opacity 0.2
              --cs-cta-disabled-border-color      // --cs-cta-disabled-background-color

              <b>Secondary-variant only</b>
              --cs-cta-secondary-color            // dark-gray
              --cs-cta-secondary-background-color // transparent
              --cs-cta-secondary-border-color     // --cs-cta-secondary-color

              <b>Secondary-variant: Hover state</b>
              --cs-cta-secondary-hover-color              // --cs-cta-hover-color
              --cs-cta-secondary-hover-background-color   // --cs-cta-hover-background-color

              <b>Secondary-variant: Disabled state</b>
              --cs-cta-secondary-disabled-color           // --cs-cta-disabled-color
              --cs-cta-secondary-disabled-border-color    // --cs-cta-disabled-border-color
              }
            </code>
          </pre>
        {{/freestyle-annotation}}
      {{/collection.variant}}
    {{/freestyle-collection}}
  {{/freestyle-section}}


  {{!-- TEXT FIELD --}}
  {{#freestyle-section name="TextField"}}
    <ViewModeControl
      @name="text-field"
      @viewMode={{this.viewMode}}
      @showLabelInViewMode={{this.showLabelInViewMode}}
    />
    {{#freestyle-collection title="TextField" defaultKey="default" inline=true as |collection|}}
      {{#collection.variant key="default"}}
        {{#freestyle-usage "text-field-default" title="Default TextField"}}
          <TextField @label="What's your name?" @mode={{this.mode}} @showLabelInViewMode={{this.showLabelInViewMode}} />
        {{/freestyle-usage}}
      {{/collection.variant}}
      {{#collection.variant key="animated-label"}}
        {{#freestyle-usage "text-field-animated-default" title="TextField with Animated Label"}}
          <TextField @label="What's your name?" @animatedLabel={{true}} @mode={{this.mode}} @showLabelInViewMode={{this.showLabelInViewMode}} />
        {{/freestyle-usage}}
        {{#freestyle-usage "text-field-animated-required" title="Required TextField with Animated Label"}}
          <TextField @label="What's your name?" @animatedLabel={{true}} @required={{true}} @mode={{this.mode}} @showLabelInViewMode={{this.showLabelInViewMode}} />
        {{/freestyle-usage}}
      {{/collection.variant}}
      {{#collection.variant key="validation"}}
        {{#freestyle-usage "text-field-validation" title="TextField with Validation"}}
          <TextField @label="Enter a number" @pattern="[0-9]+" @mode={{this.mode}} @showLabelInViewMode={{this.showLabelInViewMode}} />
        {{/freestyle-usage}}
        {{#freestyle-usage "text-field-validation-custom-message" title="TextField with Custom Validation Message"}}
          <TextField @label="Enter a number" @pattern="[0-9]+" @title="Enter a number please!" @mode={{this.mode}} @showLabelInViewMode={{this.showLabelInViewMode}} />
        {{/freestyle-usage}}
      {{/collection.variant}}
    {{/freestyle-collection}}
  {{/freestyle-section}}


  {{!-- PHONE NUMBER --}}
  {{#freestyle-section name="Phone Number Field"}}
    <ViewModeControl
      @name="phone-number"
      @viewMode={{this.viewMode}}
      @showLabelInViewMode={{this.showLabelInViewMode}}
    />
    {{#freestyle-usage "phone-number-field-default" title="Phone Number Field"}}
      <PhoneNumberField @mode={{this.mode}} @showLabelInViewMode={{this.showLabelInViewMode}} />
    {{/freestyle-usage}}
    {{#freestyle-usage "phone-number-field-required" title="Phone Number Field (Required)"}}
      <PhoneNumberField @required={{true}} @mode={{this.mode}} @showLabelInViewMode={{this.showLabelInViewMode}} />
    {{/freestyle-usage}}
    {{#freestyle-usage "phone-number-field-multi" title="Phone Number List (Multiple Fields)"}}
      <PhoneNumberFields @values={{this.phoneNumberValues}} @mode={{this.mode}} @showLabelInViewMode={{this.showLabelInViewMode}} />
    {{/freestyle-usage}}

    Phone Numbers JSON:
    <pre>{{this.stringifiedPhoneNumbers}}</pre>
  {{/freestyle-section}}


  {{!-- TEXTAREA --}}
  {{#freestyle-section name="Text Area"}}
    <ViewModeControl
      @name="text-area"
      @viewMode={{this.viewMode}}
      @showLabelInViewMode={{this.showLabelInViewMode}}
    />
    {{#freestyle-collection title="TextArea" defaultKey="default" inline=true as |collection|}}
      {{#collection.variant key="default"}}
        {{#freestyle-usage "text-area-default" title="Text Area"}}
          <TextArea @label="What's on your mind?" @mode={{this.mode}} @showLabelInViewMode={{this.showLabelInViewMode}} />
        {{/freestyle-usage}}
      {{/collection.variant}}
      {{#collection.variant key="with-max-length"}}
        {{#freestyle-usage "text-area-with-max-length" title="Text Area with Max Length"}}
          <TextArea @label="What's on your mind?" @rows={{5}} @characterLimit={{20}} @mode={{this.mode}} @showLabelInViewMode={{this.showLabelInViewMode}} />
        {{/freestyle-usage}}
      {{/collection.variant}}
    {{/freestyle-collection}}
  {{/freestyle-section}}


  {{!-- PASSWORD --}}
  {{#freestyle-section name="Password Field"}}
    {{#freestyle-collection title="password" defaultKey="default" inline=true as |collection|}}
      {{#freestyle-annotation}}
        <code>PasswordField</code> can take in a few options that enforce security requirements
        <ul>
          <li><code>minLength</code> - (integer) minimum characters</li>
          <li><code>mustIncludeUppercase</code> - (boolean) must include at least one uppercase character</li>
          <li><code>mustIncludeLowercase</code> - (boolean) must include at least one lowercase character</li>
          <li><code>mustIncludeNumber</code> - (boolean) must include at least one number</li>
          <li><code>mustIncludeSpecialCharacter</code> - (boolean) must include at least one special character</li>
          <li><code>successMessage</code> - (string) message to display when the password is valid</li>
        </ul>
      {{/freestyle-annotation}}
      {{#freestyle-note "password-field-default--notes"}}
        By default, `PasswordField` will render without any of the password requirements except for needing a minimum length of 6.
      {{/freestyle-note}}
      {{#collection.variant key="default"}}
        {{#freestyle-usage "password-field-default" title="Password Field"}}
          <PasswordField />
        {{/freestyle-usage}}
      {{/collection.variant}}
      {{#collection.variant key="with-requirements"}}
        {{#freestyle-usage "password-field-with-requirements" title="Password Field with requirements"}}
          <PasswordField
            @minLength={{8}}
            @mustIncludeUppercase={{true}}
            @mustIncludeLowercase={{true}}
            @mustIncludeNumber={{true}}
            @mustIncludeSpecialCharacter={{true}}
            @successMessage="Nice password ;-)"
          />
        {{/freestyle-usage}}
      {{/collection.variant}}
      {{#collection.variant key="custom-validator"}}
        {{#freestyle-note "password-field-with-custom-validator--notes"}}
          You can define a custom function to validate the password and pass a custom validation message.
          ```
            validator(value) {
              return {
                valid: value === 'cardstack',
                message: 'Password must be "cardstack"'
              };
            }
          ```
        {{/freestyle-note}}
        {{#freestyle-usage "password-field-with-custom-validator" title="Password Field with custom validator function"}}
          <PasswordField @validate={{this.validator}} />
        {{/freestyle-usage}}
      {{/collection.variant}}
      {{#collection.variant key="animated-label"}}
        {{#freestyle-usage "password-field-animated-label" title="Password Field with animated label"}}
          <PasswordField @animatedLabel={{true}} />
        {{/freestyle-usage}}
      {{/collection.variant}}
    {{/freestyle-collection}}
  {{/freestyle-section}}


  {{!-- CHOOSE ITEMS --}}
  {{#freestyle-section name="Choose Items"}}
    {{#freestyle-usage "text-choose-one" title="Choose One (Text)"}}
      <ChooseOne @legend="What is your Favorite Color?" @choices={{this.selectItemOptions}} @selectionChanged={{action this.doSomething}} />
    {{/freestyle-usage}}
    {{#freestyle-note "text-choose-one--notes"}}
      Takes an array of primitives or objects, an optional `label`, and an optional action to be called when selecting an item.
    {{/freestyle-note}}

    {{#freestyle-usage "text-choose-many" title="Choose Many (Text)"}}
      <ChooseMany @legend="What combination makes Purple?" @choices={{this.selectItemOptions}} @selectionChanged={{action this.doSomething}} />
    {{/freestyle-usage}}
    {{#freestyle-note "text-choose-many--notes"}}
      Takes an array of primitives or objects, an optional `label`, and an optional action to be called when selecting an item.
    {{/freestyle-note}}
  {{/freestyle-section}}

  {{#freestyle-section name="Choose Contact Type"}}
    {{#freestyle-usage "choose-contact-type" title="Choose Contact Type"}}
      <ChooseContactType @selectionChanged={{action this.doSomething}} />
    {{/freestyle-usage}}
  {{/freestyle-section}}

  {{!-- EMAIL --}}
  {{#freestyle-section name="Email Input"}}
    <ViewModeControl
      @name="email"
      @viewMode={{this.viewMode}}
      @showLabelInViewMode={{this.showLabelInViewMode}}
    />
    {{#freestyle-collection title="email" defaultKey="default" inline=true as |collection|}}
      {{#collection.variant key="default"}}
        {{#freestyle-usage "email-input-default" title="Email Field (Default)"}}
          <Email
            @label="Email Address"
            @mode={{this.mode}}
            @showLabelInViewMode={{this.showLabelInViewMode}}
          />
        {{/freestyle-usage}}
      {{/collection.variant}}
      {{#collection.variant key="multiple"}}
        {{#freestyle-usage "email-multiple" title="Multiple Email Fields"}}
          <Emails
            @values={{this.emailValues}}
            @mode={{this.mode}}
            @showLabelInViewMode={{this.showLabelInViewMode}}
          />
        {{/freestyle-usage}}
        {{#freestyle-annotation}}
          Emails JSON:
          <pre>{{this.stringifiedEmails}}</pre>
        {{/freestyle-annotation}}
      {{/collection.variant}}
      {{#collection.variant key="animated-label"}}
        {{#freestyle-usage "email-input-animated-default" title="Email field with animated label"}}
          <Email
            @animatedLabel={{true}}
            @mode={{this.mode}}
            @showLabelInViewMode={{this.showLabelInViewMode}}
          />
        {{/freestyle-usage}}
      {{/collection.variant}}
    {{/freestyle-collection}}
  {{/freestyle-section}}


  {{!-- CHECKBOX --}}
  {{#freestyle-section name="Checkbox (boolean)"}}
    {{#freestyle-annotation}}
      <p>All Checkboxes require passing in a <code>setChecked</code> function that fires when the checkbox is clicked. The function receives two params, the name of the property to set, and the value (true or false).</p>
    {{/freestyle-annotation}}
    {{freestyle-usage "checkbox-action" title="Example Action"}}
    {{#freestyle-usage "checkbox-default" title="Default (Optional)"}}
      <Checkbox @label="Include a free gift in my order" @setChecked={{fn this.setChecked "checkedOne"}} @checked={{false}} />
    {{/freestyle-usage}}
    {{#freestyle-usage "checkbox-required" title="Required"}}
      <Checkbox @label="I accept the Cardstack Terms of Service" @required={{true}} @setChecked={{fn this.setChecked "checkedTwo"}} @checked={{false}} />
    {{/freestyle-usage}}
    {{#freestyle-usage "checkbox-disabled" title="Disabled"}}
      <Checkbox @label="Enable Dark Mode" @disabled={{true}} @setChecked={{fn this.setChecked "checkedThree"}} @checked={{this.isChecked}} />
    {{/freestyle-usage}}
    {{#freestyle-usage "checkbox-default-checked" title="Default Checked"}}
      <Checkbox @label="I would like to subscribe to your newsletter" @checked={{true}} @setChecked={{fn this.setChecked "checkedFour"}} />
    {{/freestyle-usage}}
  {{/freestyle-section}}


  {{!-- STREET ADDRESS --}}
  {{#freestyle-section name="Street Address"}}
    <ViewModeControl
      @name="street-address"
      @viewMode={{this.viewMode}}
      @showLabelInViewMode={{this.showLabelInViewMode}}
    />
    {{#freestyle-collection title="street-address" defaultKey="default" inline=true as |collection|}}
      {{#freestyle-note "street-address--notes"}}
        Uses the Google Places API to search for addresses. A Google Maps API_KEY must be provided with Google Places API
        enabled. Takes an optional `label` property (defaults to "Enter a street address").
      {{/freestyle-note}}
      {{#collection.variant key="default"}}
        {{#freestyle-usage "street-address" title="Street Address"}}
          <StreetAddress @label="Enter your address" @mode={{this.mode}} @showLabelInViewMode={{this.showLabelInViewMode}} />
        {{/freestyle-usage}}
      {{/collection.variant}}
      {{#collection.variant key="multiple"}}
        {{#freestyle-usage "street-address-multiple" title="Street Address Multiple"}}
          <StreetAddresses @selections={{this.streetAddresses}} @mode={{this.mode}} @showLabelInViewMode={{this.showLabelInViewMode}} />
        {{/freestyle-usage}}
        {{#freestyle-annotation}}
          Selected addresses JSON:
          <pre>{{this.stringifiedAddresses}}</pre>
        {{/freestyle-annotation}}
      {{/collection.variant}}
    {{/freestyle-collection}}
  {{/freestyle-section}}


  {{!-- DATE PICKER --}}
  {{#freestyle-section name="date-picker"}}
    <ViewModeControl
      @name="date-picker"
      @viewMode={{this.viewMode}}
      @showLabelInViewMode={{this.showLabelInViewMode}}
    />
    {{#freestyle-collection title="date picker" defaultKey="default" inline=true as |collection|}}
      {{#freestyle-annotation}}
        <p>Allows user to select a date from calendar view or enter their own input. User can navigate the calendar using arrows or the month and year dropdowns.</p>
        Default validation for date input:
        <ul>
          <li>Valid for years as of 1900.</li>
          <li>Accounts for leap years.</li>
        </ul>
        <p>Default year range offered in the dropdown is from 1920 to 2070. However, this can be changed using <code>startYear</code> and <code>yearRange</code> attributes.</p>
      {{/freestyle-annotation}}
      {{#collection.variant key="default"}}
        {{#freestyle-usage "date-picker-optional" title="Default"}}
          <DatePicker @animatedLabel={{true}} @label="Date (MM/DD/YYYY)" @mode={{this.mode}} @showLabelInViewMode={{this.showLabelInViewMode}} />
        {{/freestyle-usage}}
      {{/collection.variant}}
      {{#collection.variant key="disabled"}}
        {{#freestyle-usage "date-picker-disabled" title="Disabled"}}
          <DatePicker @animatedLabel={{true}} @label="Date (MM/DD/YYYY)" @disabled={{true}} @mode={{this.mode}} @showLabelInViewMode={{this.showLabelInViewMode}} />
        {{/freestyle-usage}}
      {{/collection.variant}}
      {{#collection.variant key="required"}}
        {{#freestyle-usage "date-picker-required" title="Required"}}
          <DatePicker @animatedLabel={{true}} @label="Date (MM/DD/YYYY)" @required="true" @mode={{this.mode}} @showLabelInViewMode={{this.showLabelInViewMode}} />
        {{/freestyle-usage}}
      {{/collection.variant}}
      {{#collection.variant key="custom-years"}}
        {{#freestyle-note "date-picker-custom-years--notes"}}
          Using `startYear` and `yearRange` attributes to change the dropdown year range.
        {{/freestyle-note}}
        {{#freestyle-usage "date-picker-custom-years" title="Custom Years"}}
          <DatePicker @animatedLabel={{true}} @label="Date (MM/DD/YYYY)" @startYear="1980" @yearRange="50" @mode={{this.mode}} @showLabelInViewMode={{this.showLabelInViewMode}} />
        {{/freestyle-usage}}
      {{/collection.variant}}
    {{/freestyle-collection}}
  {{/freestyle-section}}


  {{!-- FILE UPLOAD DIALOG --}}
  {{#freestyle-section name="File Upload Dialog"}}
    {{#freestyle-annotation}}
      <code>FileUploadDialog</code> can take in a few parameters

      <ul>
        <li><code>acceptedFormats</code> - (string) a read-friendly list of formats accepted (i.e. "png, jpg, gif"). This will get rendered below the file icon.</li>
        <li><code>accept</code> - (string) A list of MIME types / extensions to be accepted by the input i.e. "image/*" </li>
        <li><code>handleFile</code> - (function) function to handle uploading file to a server; <code>file</code> will be passed in</li>
      </ul>
    {{/freestyle-annotation}}
    {{#freestyle-usage "file-upload-dialog-default" title="File Upload Dialog"}}
      <FileUploadDialog @acceptedFormats="jpg, gif, png" />
    {{/freestyle-usage}}
  {{/freestyle-section}}
{{/freestyle-guide}}